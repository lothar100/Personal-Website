@inject IJSRuntime _JSRuntime

@if (string.IsNullOrWhiteSpace(Model.MoreSummary) == false && string.IsNullOrWhiteSpace(Model.MoreSummaryId) == false)
{
    <p id="@Model.MoreSummaryId" class="card-text @Collapsing" style="@Style">@((MarkupString)Model.MoreSummary)</p>

    <p @onclick="ToggleCollapse">
        <CardCollapseButton Text="@ButtonText" Model="@Model" />
    </p>
}

@code {
    [Parameter]
    public PageModuleModel Model { get; set; }

    private bool IsClosed = true;
    private bool Initialized = false;
    private int StartingHeight;

    private string ButtonText => IsClosed ? "Show More" : "Show Less";
    private string Collapsing => Initialized ? "collapsing" : null;
    private string Style => Initialized ? (IsClosed ? "height:0" : $"height:{StartingHeight}px") : null;

    private void ToggleCollapse()
    {
        IsClosed = !IsClosed;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && string.IsNullOrWhiteSpace(Model.MoreSummaryId) == false)
        {
            StartingHeight = await _JSRuntime.InvokeAsync<int>("helper.getHeight", Model.MoreSummaryId);
            Initialized = true;
            StateHasChanged();
        }
    }
}
