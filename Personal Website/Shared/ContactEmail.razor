@using System.Net.Mail
@inject SmtpClient _SmtpClient
@inject IHttpContextAccessor _HttpContextAccessor

<AuthorizeView>
    <NotAuthorized Context="Auth">

        <div class="container pb-3">
            <div class="card" style="max-width: 90rem">
                <div class="card-body">
                    <h3 class="card-title">Contact Me</h3>
                    <EditForm Model="@Model" OnValidSubmit="SendEmail" @onkeydown="ClearMessages">
                        <DataAnnotationsValidator />

                        <div class="pl-1 pt-2">
                            <label class="mb-1" for="name">
                                <span class="oi oi-person"></span>
                                @Helper.DisplayNameFor(typeof(ContactEmailModel), "Name")
                            </label>
                        </div>
                        <div>
                            <InputText class="card-text form-control form-control-sm" style="max-width:576px" type="text" id="name" placeholder="Enter Name" @bind-Value="@Model.Name"></InputText>
                            <ValidationMessage For="@(() => Model.Name)" />
                        </div>
                        

                        <div class="pl-1 pt-2">
                            <label class="mb-1" for="name">
                                <span class="oi oi-envelope-closed"></span>
                                @Helper.DisplayNameFor(typeof(ContactEmailModel), "EmailAddress")
                            </label>
                        </div>
                        <div>
                            <InputText class="card-text form-control form-control-sm" style="max-width:576px" type="text" id="email" placeholder="Enter Email" @bind-Value="@Model.EmailAddress"></InputText>
                            <ValidationMessage For="@(() => Model.EmailAddress)" />
                        </div>
                        


                        <div class="pl-1 pt-2">
                            <label class="mb-1" for="name">
                                <span class="oi oi-comment-square"></span>
                                @Helper.DisplayNameFor(typeof(ContactEmailModel), "Message")
                            </label>
                        </div>
                        <div>
                            <InputTextArea class="card-text form-control form-control-sm custom-textarea" style="max-width:576px" type="text" id="message" placeholder="Type Your Message" rows="@Model.MessageRows" @bind-Value="@Model.Message" @oninput="BindMessage"></InputTextArea>
                            <ValidationMessage For="@(() => Model.Message)" />
                        </div>

                        <div class="pt-2">
                            <button type="submit" class="btn btn-outline-dark btn-sm">Send</button>
                            <AlertText Class="success" Text="@SuccessMessage" />
                            <AlertText Class="warning" Text="@StatusMessage" />
                        </div>
                    </EditForm>
                </div>

            </div>
        </div>

    </NotAuthorized>
</AuthorizeView>

@code {
    string SuccessMessage;
    string StatusMessage;
    ContactEmailModel Model = new ContactEmailModel();

    private void BindMessage(ChangeEventArgs e)
    {
        Model.Message = e.Value.ToString();
    }

    private void SendEmail()
    {
        StatusMessage = "Sending...";

        Model.RemoteIPAddress = _HttpContextAccessor.HttpContext.Connection.RemoteIpAddress.ToString();

        MailMessage mailMessage = new MailMessage()
        {
            From = new MailAddress("infrared.skittle@gmail.com"),
            Subject = $"{Model.Name} sent you a message from pietrlangevoort.com",
            Body =
            $"{Environment.NewLine}" +
            $"Name: {Model.Name}" +
            $"{Environment.NewLine}" +
            $"Email: {Model.EmailAddress}" +
            $"{Environment.NewLine}" +
            $"Message: {Model.Message}" +
            $"{Environment.NewLine}" +
            $"{Environment.NewLine}" +
            $"IP: {Model.RemoteIPAddress}"
        };
        mailMessage.To.Add(new MailAddress("infrared.skittle@gmail.com"));

        _SmtpClient.Send(mailMessage);
        UpdateAfterSend();
    }

    private void UpdateAfterSend()
    {
        StatusMessage = null;
        Model = new ContactEmailModel();
        SuccessMessage = "Email Sent";
    }

    private void ClearMessages()
    {
        SuccessMessage = null;
        StatusMessage = null;
    }
}
